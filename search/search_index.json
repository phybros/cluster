{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home Cluster","text":"<p>This repo is where the state of my home k3s cluster is declared. As changes are pushed to the repo, Flux applies those changes to the running cluster. All of the configuration that Flux cares about is in the <code>cluster/</code> directory of the repo.</p> <p>This repo was created from the k8s-at-home/template-cluster-k3s template repo which can get you up and running with a similar setup in no time.</p> <p>Take your questions to the Kubernetes @Home Discord! It's full of awesome people, and a wealth of knowledge.</p>"},{"location":"#components","title":"Components","text":"<ul> <li>Flux: Watches this repo and applies changes to the cluster.</li> <li>MetalLB: Implementation of <code>LoadBalancer</code> for bare metal Kubernetes clusters, using standard routing protocols (give any <code>Service</code> an IP on your network via ARP!).</li> <li>Traefik: My preferred ingress controller to expose traffic to pods.</li> <li>cert-manager: Configured to create TLS certs for all ingress services automatically using LetsEncrypt.</li> <li>Mozilla SOPS: Encrypts secrets which is safe to store - even to a public repository.</li> <li>rook-ceph: Provides persistent volumes, allowing any application to consume RBD block storage.</li> <li>benji: Automated backups of rook-ceph PVCs, management of backup retention, and restoration of backups to new PVCs.</li> <li>And lots more!</li> </ul> <p>Check the site nav for more info about the setup of some of these.</p>"},{"location":"#repository-structure","title":"Repository structure","text":"<p>The Git repository contains the following directories under <code>cluster</code> and are ordered below by how Flux will apply them.</p> <ul> <li>base directory is the entrypoint to Flux</li> <li>crds directory contains custom resource definitions (CRDs) that need to exist globally in your cluster before anything else exists</li> <li>core directory (depends on crds) are important infrastructure applications (grouped by namespace) that should never be pruned by Flux</li> <li>apps directory (depends on core) is where your common applications (grouped by namespace) could be placed, Flux will prune resources here if they are not tracked by Git anymore</li> </ul> <pre><code>./cluster\n\u251c\u2500\u2500 ./apps\n\u251c\u2500\u2500 ./base\n\u251c\u2500\u2500 ./core\n\u2514\u2500\u2500 ./crds\n</code></pre>"},{"location":"apps/apps/","title":"Apps","text":"<ul> <li>paperless-ng</li> <li>gitea</li> <li>plex</li> <li>tautulli</li> <li>samba</li> <li>home-assistant</li> <li>esphome</li> <li>appdaemon</li> <li>mosquitto</li> <li>teslamate</li> <li>grafana</li> <li>prometheus</li> <li>system-upgrade-controller</li> <li>traefik</li> </ul>"},{"location":"networking/metallb/","title":"MetalLB","text":"<p>Luckily, my usage of MetalLB is super basic. <code>Service</code> objects of type <code>LoadBalancer</code> are given an IP address from the local network router using ARP.</p> <p>The relevant piece of config is https://github.com/phybros/k3s-cluster/blob/main/cluster/core/metallb-system/helm-release.yaml#L18-L24</p> <p>The variable <code>METALLB_LB_RANGE</code> is set in https://github.com/phybros/k3s-cluster/blob/main/cluster/base/cluster-settings.yaml#L14</p>"},{"location":"storage/backups/","title":"Backups","text":"<p>First, add these to <code>~/.zshrc</code> to get the <code>benji</code>, <code>benji-restore-pvc</code> and <code>benji-command</code> commands on your local machine:</p> <pre><code># Benji Aliases\ndo_benji_subcommand() {\n  benji_pod=$(k get po -n backup-system --selector=app.kubernetes.io/component=maint,app.kubernetes.io/instance=benji,app.kubernetes.io/name=benji -o jsonpath='{.items[0].metadata.name}')\n  k exec -i -n backup-system \"$benji_pod\" -c benji -- $@\n  return \"$?\"\n}\nalias benji=\"do_benji_subcommand benji\"\nalias benji-restore-pvc=\"do_benji_subcommand benji-restore-pvc\"\nalias benji-command=\"do_benji_subcommand benji-command\"\nalias benji-backup-pvc=\"do_benji_subcommand benji-backup-pvc\"\n</code></pre>"},{"location":"storage/backups/#storage-stats","title":"Storage Stats","text":"<pre><code># note: this can take some time to return\nbenji storage-stats\n+---------------+--------------+\n| objects_count | objects_size |\n+---------------+--------------+\n|         19826 |      38.3GiB |\n+---------------+--------------+\n</code></pre>"},{"location":"storage/backups/#querying-backups","title":"Querying Backups","text":"<pre><code># get all backups\nbenji ls\n\n# just get ones from less than a day ago\nbenji ls 'date &gt; \"1 day ago\"'\n\n# get backups for specific PVC\nbenji ls 'volume == \"default/gitea-db-v1\"'\n\n# and you can combine them!\nbenji ls 'volume == \"default/gitea-db-v1\" and date &gt; \"1 day ago\"'\n</code></pre>"},{"location":"storage/backups/#restoring-backups","title":"Restoring Backups","text":"<p>The command is long, mostly because I use a nonstandard <code>restore-url-template</code>.</p> <pre><code># basic command with args\nbenji-restore-pvc \\\n  --pvc-storage-class rook-ceph-block \\\n  --restore-url-template \"replicapool:{pool}/{image}\" \\\n  &lt;version uid&gt; \\\n  &lt;new namespace&gt; \\\n  &lt;new pvc name&gt;\n</code></pre> <p>Example of restoring</p> <pre><code># find the latest backup version uid\nbenji ls 'date &gt; \"1 day ago\"'\n\n# restore it to the \"games\" namespace\nbenji-restore-pvc \\\n  --pvc-storage-class rook-ceph-block \\\n  --restore-url-template \"replicapool:{pool}/{image}\" \\\n  default-hajimari-config-v1-l5krjs games hajimari-restored\n\nRestoring version default-hajimari-config-v1-l5krjs to PVC games/hajimari-restored.\nWaiting for persistent volume creation.\n    INFO: Restored 1/8 blocks (12.5%)\n    INFO: Restored 2/8 blocks (25.0%)\n    INFO: Restored 3/8 blocks (37.5%)\n    INFO: Restored 4/8 blocks (50.0%)\n    INFO: Restored 5/8 blocks (62.5%)\n    INFO: Restored 6/8 blocks (75.0%)\n    INFO: Restored 7/8 blocks (87.5%)\n    INFO: Restored 8/8 blocks (100.0%)\n    INFO: Successfully restored version default-hajimari-config-v1-l5krjs in 04s with 6.9MiB/s.\n</code></pre>"},{"location":"storage/backups/#restoring-benji-itself","title":"Restoring Benji Itself","text":"<p>TODO</p>"}]}